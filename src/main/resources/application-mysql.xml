<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<!-- 以下文件为Hibernate建立的配置文件 -->

	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${mysql.driverClassName}"></property>
		<property name="url" value="${mysql.url}"></property>
		<property name="username" value="${mysql.username}"></property>
		<property name="password" value="${mysql.password}"></property>
	</bean>
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> -->
	<!-- <property name="driverClassName" value="${mysql.driverClassName}"></property> -->
	<!-- <property name="url" value="${mysql.url}"></property> -->
	<!-- <property name="username" value="${mysql.username}"></property> -->
	<!-- <property name="password" value="${mysql.password}"></property> -->
	<!-- </bean> -->

	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
			</props>
		</property>
		<!-- <property name="packagesToScan"> -->
		<!-- <value>${hibernate.package_to_scan}</value> -->
		<!-- </property> -->
		<!-- <property name="annotatedPackages"> -->
		<!-- <value>com.gusi.demo.pojo</value> -->
		<!-- </property> -->
		<property name="annotatedClasses">
			<list>
				<value>com.gusi.demo.pojo.Person</value>
			</list>
		</property>
	</bean>

	<!-- hibernate模版对象 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置一个事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 使用Spring注解管理事物 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />


	<!-- 配置事务的传播特性 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="add*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="del*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="modify*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="*" read-only="false" /> -->
	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->

	<!-- 配置事务，使用代理的方式 -->
	<!-- <bean id="transactionProxy" -->
	<!-- class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" -->
	<!-- abstract="true"> -->
	<!-- <property name="transactionManager" ref="transactionManager"></property> -->
	<!-- <property name="transactionAttributes"> -->
	<!-- <props> -->
	<!-- <prop key="add*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="save*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="update*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="delete*">PROPAGATION_REQUIRED</prop> -->
	<!-- <prop key="*">PROPAGATION_REQUIRED</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->


</beans>